<%= form_for post, html: { multipart: true, class: "editor-form", autocomplete: "off" } do |f| %>

  <label class="picture_upload">
    <%= f.file_field :picture %>
    <span class="icon-camera"></span>
  </label>
  <div class="file-upload-previewer hidden">
    <img src="" id="image_preview"/>
  </div>
  <% if post.picture? %>
    <div class="existing-img-previewer" id="existing-img-previewer">
      <%= image_tag post.picture.url(:thumb) %>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.text_field :title, class: 'editor-title', placeholder: 'Title', autofocus: true, data: { behavior: "autosave" }, onfocus: "this.value = this.value;" %>
  </div>

  <div class="form-group">
    <%= f.text_area :body, class: 'medium-editable', data: { behavior: "autosave" } %> 
  </div>

  <div class="hidden">
    <%= f.text_field :all_tags %>
  </div>

  <div class="clearfix" data-behavior="tags" data-tags="<%= post.all_tags %>">
    <div id="js-taggle" style="position: relative;" data-behavior="autosave"></div>
  </div>

  <%= f.submit "Publish", class: "button green-inner-button" %>
<% end %>

<scirpt src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.amd.js"></script>

<script>
var editor = new MediumEditor('.medium-editable', {
  placeholder: {
    text: "Tell your Story ..."
  }
});

$('.medium-editable').mediumInsert({
  editor: editor,
  addons: {
    images: {
      fileUploadOptions: {
        url: $('.editor-form').attr('action'),
        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        method: 'PATCH'
      }
    }
  }
});

// preload tags if its edit.
var tag_string = $('[data-behavior="tags"]').data("tags");
var tags = tag_string.length > 0 ? tag_string.split(', ') : [];
var my_taggle = new Taggle('js-taggle', {
  duplicateTagClass: 'bounce',
  tags: tags,
  preserveCase: true
});
// FIXME: is there a better way to do this?
$('input[type="submit"]').hover(function() {
  $('#post_all_tags').val(my_taggle.getTagValues());
});
/*** Image Preview ***/
function readURL(input) { 
  if (input.files && input.files[0]) {
    var reader = new FileReader();
    reader.onload = function (e) {
      $('#image_preview').attr('src', e.target.result);
    }
    reader.readAsDataURL(input.files[0]);
  }
}
$("#post_picture").change(function(){
  readURL(this);
  $('#existing-img-previewer').addClass('hidden');
  $('.picture_upload').addClass('active');
  $('.file-upload-previewer').removeClass('hidden');
});
/*** Autosave ***/
$('[data-behavior="autosave"]').autoSave(function() {
  $('[data-behavior="editor-message"]').text('Saving...');
  $('#post_all_tags').val(my_taggle.getTagValues());
  postAutosave($('.editor-form').attr('action'),
                $('input[name="_method"]').val(),
                $('#post_title').val(),
                $('#post_body').val(),
                $('#post_all_tags').val()
                );
}, 500); 
function postAutosave(url, method, title, body, all_tags) {
  $.ajax({
    url: '/api' + url,
    dataType: "script",
    method: method || "POST",
    data: {
      post: {
        title: title,
        body: body,
        all_tags: all_tags
      }
    },
    success: function() { console.log('autosave successful'); }
  });
}
</script>